@page "/phayarsarTitleDetails/{title}"
@inject HttpClient HttpClient
@inject NavigationManager Navigation


<PageTitle>Phayarsar</PageTitle>

@if (groupData == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <h3>@groupData.title</h3>

    @if (groupData.Data == null || !groupData.Data.Any())
    {
        <p>No data available.</p>
    }
    else
    {
        <table class="table">
            <tbody>
                @foreach (var item in groupData.Data)
                {
                    <tr @onclick="@(() => OnPhayarsarClick(item.Title,item.GroupId,item.Id))">
                        <td>@item.Title</td>
                    </tr>
                }
            </tbody>
        </table>
    }
}

@code {
    [Parameter]
    public string title { get; set; }

    private GroupData? groupData;

    public class GroupData
    {
        public int groupId { get; set; }
        public string title { get; set; }
        public List<DataItem> Data { get; set; }
    }

    public class DataItem
    {
        public int Id { get; set; }
        public int GroupId { get; set; }
        public string Title { get; set; }
        public string Content { get; set; }
    }

    protected override async Task OnParametersSetAsync()
    {
        try
        {
            var allGroups = await HttpClient.GetFromJsonAsync<GroupData[]>("data/data.json");
            if (allGroups != null)
            {
                groupData = allGroups.FirstOrDefault(g => g.title == title);
            }
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"Error fetching group data: {ex.Message}");
        }
    }
    private void OnPhayarsarClick(string title,int groupId,int id)
    {
        Navigation.NavigateTo($"/phayarsarContentDetails/{title}/{groupId}/{id}");
    }
}